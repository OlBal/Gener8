{"version":3,"sources":["data/initial.js","data/functions/pairs.js","data/functions/shuffle.js","data/reducer.js","data/store.js","data/history.js","components/Players/Players.js","components/Players/index.js","components/Button/Button.js","components/Settings/Settings.js","components/Settings/index.js","data/actions.js","components/Matches/Matches.js","components/Matches/index.js","components/Tournament/Tournament.js","components/Tournament/index.js","components/App/App.js","index.js"],"names":["initial","players","pairs","roundWinners","view","arr","pairChunks","i","length","pairGroup","slice","push","shuffle","temp","m","Math","floor","random","addPlayer","state","playerName","playerPairs","playerShuffle","nextRound","winners","startTournament","reducer","action","type","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","persistState","createHashHistory","Players","this","props","className","map","item","index","key","Component","connect","Button","handleClick","buttonClass","label","disabled","onClick","Settings","handleChange","e","setState","target","value","handleAddName","preventDefault","handleAdd","handleStart","bind","handleClear","onSubmit","required","onChange","to","dispatch","Matches","selected","names","Tournament","handleSubmit","round","handleNextRound","console","log","App","history","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d523e80d.chunk.js","sourcesContent":["const initial = {\n  players: [],\n  pairs: [],\n  roundWinners: 0,\n  view: true,\n};\n\nexport default initial;\n","const pairs = (arr, pairChunks) => {\n  let pairs = [];\n\n  for (let i = 0; i < arr.length; i += pairChunks) {\n    const pairGroup = arr.slice(i, i + pairChunks);\n    pairs.push(pairGroup);\n  }\n  return pairs;\n};\nexport default pairs;\n","const shuffle = (arr) => {\n  var m = arr.length,\n    temp,\n    i;\n  while (m) {\n    i = Math.floor(Math.random() * m--);\n    temp = arr[m];\n    arr[m] = arr[i];\n    arr[i] = temp;\n  }\n\n  return arr;\n};\n\nexport default shuffle;\n\n// for (let i = arr.length - 1; i > 0; i--) {\n//     let j = Math.floor(Math.random() * (i + 1));\n//     [arr[i], arr[j]] = [arr[j], arr[i]];\n","import initial from \"./initial\";\nimport pairs from \"./functions/pairs\";\nimport shuffle from \"./functions/shuffle\";\n\n//Adds new player to global state array\n\nconst addPlayer = (state, { playerName }) => {\n  return {\n    ...state,\n    players: [...state.players, playerName],\n  };\n};\n\n//Shuffles players array and outputs 4 pairs of players\n\nconst playerPairs = (state) => {\n  return {\n    ...state,\n    pairs: pairs([...state.players], 2),\n  };\n};\n\nconst playerShuffle = (state) => {\n  return {\n    ...state,\n    players: shuffle([...state.players]),\n  };\n};\n\nconst nextRound = (state, { winners }) => {\n  return {\n    ...state,\n    roundWinners: [...state.roundWinners, winners],\n  };\n};\n\nconst startTournament = (state) => {\n  return {\n    ...state,\n    view: false,\n  };\n};\n\nconst reducer = (state = initial, action) => {\n  switch (action.type) {\n    case \"ADD_PLAYER\":\n      return addPlayer(state, action);\n    case \"NEXT_ROUND\":\n      return nextRound(state, action);\n    case \"START\":\n      return startTournament(playerPairs(playerShuffle(state, action)));\n    case \"CLEAR\":\n      return initial;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, compose } from \"redux\";\nimport reducer from \"./reducer\";\nimport initial from \"./initial\";\nimport persistState from \"redux-localstorage\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, initial, composeEnhancers(persistState()));\n\nexport default store;\n","import { createHashHistory } from \"history\";\nexport default createHashHistory();\n","import React, { Component } from \"react\";\nimport \"../../App.scss\";\nclass Players extends Component {\n  render() {\n    const { players } = this.props;\n    return (\n      <ul className=\"listGroup\">\n        {players.map((item, index) => (\n          <div className=\"list-item__edit\">\n            <li\n              className=\"list-item list-item--fade list-item--show\"\n              key={index}\n            >\n              {item}\n            </li>\n          </div>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Players;\n","import { connect } from \"react-redux\";\nimport Players from \"./Players\";\n\nconst mapStateToProps = (state) => {\n  return { players: state.players };\n};\n\nexport default connect(mapStateToProps)(Players);\n","import React from \"react\";\n\nconst Button = ({ type, handleClick, buttonClass, label, disabled }) => (\n  <button\n    label={label}\n    onClick={handleClick}\n    type={type}\n    className={buttonClass}\n    disabled={disabled}\n  >\n    {label}\n  </button>\n);\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../App.scss\";\nimport Players from \"../Players\";\nimport Button from \"../Button/Button\";\n\n//\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerName: \"\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleAddName = this.handleAddName.bind(this);\n  }\n\n  // Watches value in form for player's input\n\n  handleChange = (e) => {\n    this.setState({ playerName: e.target.value });\n  };\n\n  // Add new player to players array\n\n  handleAddName = (e) => {\n    e.preventDefault();\n    this.setState({ playerName: this.state.playerName });\n    this.props.handleAdd(this.state);\n  };\n\n  /* Shuffle function to randomise & create new pairings */\n\n  handleStart = () => {\n    this.props.handleStart(this.state);\n  };\n\n  render() {\n    const { playerName } = this.state;\n    const { players, handleClear } = this.props;\n\n    return (\n      <div className=\"container\">\n        <h1> PING PONG</h1>\n        <h2> TOURNAMENT</h2>\n        <form className=\"form \" onSubmit={this.handleAddName}>\n          <input\n            required\n            className=\"form-control\"\n            type=\"text\"\n            value={playerName}\n            onChange={this.handleChange}\n          />\n          <Button\n            buttonClass=\"button button__form\"\n            label=\"Add A Player\"\n            type=\"submit\"\n            disabled={players.length === 8 ? true : false}\n          />\n        </form>\n        <Link to={\"/Tournament\"} className=\"nav nav__settings\">\n          <Button\n            buttonClass=\"button grid-child1\"\n            label=\"Start\"\n            handleClick={this.handleStart}\n            disabled={players.length !== 8 ? true : false}\n          />\n        </Link>\n\n        <Button\n          buttonClass=\"button grid-child2\"\n          label=\"Reset\"\n          handleClick={handleClear}\n        />\n        <article className=\"player-list\">\n          <Players />\n        </article>\n\n        <div className=\"circle__container\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n","import { connect } from \"react-redux\";\nimport { addPlayer, clear, startTournament } from \"../../data/actions\";\nimport Settings from \"./Settings\";\nconst mapStateToProps = (state) => {\n  return {\n    players: state.players,\n    pairs: state.pairs,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  handleAdd: (value) => dispatch(addPlayer(value)),\n  handleClear: (value) => dispatch(clear(value)),\n  handleStart: (value) => dispatch(startTournament(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n","export const addPlayer = (value) => {\n  return {\n    type: \"ADD_PLAYER\",\n    ...value,\n  };\n};\n\nexport const nextRound = (value) => {\n  return {\n    type: \"NEXT_ROUND\",\n    ...value,\n  };\n};\n\nexport const startTournament = (value) => {\n  return {\n    type: \"START\",\n    ...value,\n  };\n};\n\nexport const clear = () => {\n  return {\n    type: \"CLEAR\",\n  };\n};\n","import React, { Component } from \"react\";\nimport \"../../App.scss\";\nimport Button from \"../Button/Button\";\n\nclass Matches extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: false,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    this.setState({ selected: !this.state.selected });\n  }\n\n  render() {\n    const { pairs } = this.props;\n    let { selected } = this.state;\n    return (\n      <ul>\n        {pairs.map((item, index) => (\n          <div className=\"pairs container__roster__list\" key={index}>\n            {item.map((names, index) => (\n              <button onClick={this.handleClick} className=\"player\">\n                {names}\n              </button>\n            ))}\n          </div>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Matches;\n","import { connect } from \"react-redux\";\nimport Matches from \"./Matches\";\n\nconst mapStateToProps = ({ pairs }) => {\n  return {\n    pairs: pairs,\n  };\n};\n\nexport default connect(mapStateToProps)(Matches);\n","import React, { Component } from \"react\";\nimport \"../../App.scss\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"../Button/Button\";\nimport Matches from \"../Matches\";\n\nclass Tournament extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      winners: [],\n      round: 0,\n    };\n  }\n  // handleClick = () => {\n  //   const { winners } = this.state;\n  //   this.setState({\n  //     winners:\n  //   });\n  // };\n\n  handleSubmit = () => {\n    const { winners, round } = this.state;\n    this.setState({ winners: winners, round: round + 1 });\n    this.props.handleNextRound(this.state);\n  };\n\n  render() {\n    const { winners } = this.state;\n    return (\n      <>\n        <div className=\"container__tournament\">\n          <h1 className=\"title__App\">PING PONG</h1>\n\n          <section className=\"container__roster round-one\">\n            <Matches />\n            <Button\n              buttonClass=\"button\"\n              label=\"Next Round\"\n              handleClick={this.handleSubmit}\n              disabled={winners.length === 4 ? false : true}\n            />\n          </section>\n\n          <section className=\"container__roster semi-final\">\n            <h2 className=\"round__title\"></h2>\n            <Button\n              buttonClass=\"button\"\n              label=\"Next Round\"\n              handleClick={this.handleSubmit}\n            />\n          </section>\n\n          <section className=\"container__roster final\"></section>\n\n          <Link to={\"/\"} className=\"nav-link nav__tournament\">\n            <Button buttonClass=\"button \" label=\"Settings\" />\n          </Link>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Tournament;\n","import { connect } from \"react-redux\";\nimport { nextRound } from \"../../data/actions\";\nimport Tournament from \"./Tournament\";\nconst mapStateToProps = (state) => {\n  return {\n    pairs: state.pairs,\n    view: console.log(state.view),\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  handleNextRound: (value) => dispatch(nextRound(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tournament);\n","import React, { Component } from \"react\";\nimport history from \"../../data/history\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"../../App.scss\";\nimport Settings from \"../Settings\";\nimport Tournament from \"../Tournament\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Settings />\n          </Route>\n          <Route exact path=\"/Tournament\">\n            <Tournament />\n            <div className=\"nav\"></div>\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./data/store\";\nimport App from \"./components/App/App\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}