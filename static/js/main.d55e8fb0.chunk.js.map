{"version":3,"sources":["data/initial.js","data/functions/pairs.js","data/functions/shuffle.js","data/reducer.js","data/store.js","components/Players/Players.js","components/Players/index.js","components/Button/Button.js","components/Settings/Settings.js","components/Settings/index.js","data/actions.js","components/Matches/Matches.js","components/Matches/index.js","components/Tournament/Tournament.js","components/App/App.js","index.js"],"names":["initial","players","pairs","roundWinners","champion","round","arr","pairChunks","i","length","pairGroup","slice","push","shuffle","temp","m","Math","floor","random","addPlayer","state","playerName","playerShuffle","playerPairs","startTournament","winningPlayers","winningPairs","champ","reducer","action","type","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","persistState","Players","this","props","className","map","item","index","key","Component","connect","Button","handleClick","buttonClass","label","disabled","value","onClick","Settings","handleChange","e","setState","target","handleAddName","preventDefault","handleAdd","handleStart","bind","handleClear","onSubmit","required","id","maxlength","name","onChange","to","dispatch","Matches","handleAddWinners","pairIndex","itemIndex","winner","selected","handleRound","handleNextRound","handleChampion","semi","final","champName","reset","newGame","classname","names","Tournament","App","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d55e8fb0.chunk.js","sourcesContent":["const initial = {\n  players: [],\n  pairs: [],\n  roundWinners: [],\n  champion: [],\n  round: 0,\n};\n\nexport default initial;\n","//A function which outputs the pairs into smaller chunks of 2. It made more sense to break it out as a separate function in order not to confuse it with what is happening in the reducer functions.\n\nconst pairs = (arr, pairChunks) => {\n  let pairs = [];\n\n  for (let i = 0; i < arr.length; i += pairChunks) {\n    const pairGroup = arr.slice(i, i + pairChunks);\n    pairs.push(pairGroup);\n  }\n  return pairs;\n};\nexport default pairs;\n","// Using the Fisher Yates shuffle algorithm in a while loop, in order to mix up the player input list before pairing the players.\n//Originally this was done using a sort function but didn't randomise well enough.\n\nconst shuffle = (arr) => {\n  var m = arr.length,\n    temp,\n    i;\n  while (m) {\n    i = Math.floor(Math.random() * m--);\n    temp = arr[m];\n    arr[m] = arr[i];\n    arr[i] = temp;\n  }\n\n  return arr;\n};\n\nexport default shuffle;\n","import initial from \"./initial\";\nimport pairs from \"./functions/pairs\";\nimport shuffle from \"./functions/shuffle\";\n\n//Adds new player to global state array\n\nconst addPlayer = (state, { playerName }) => {\n  return {\n    ...state,\n    players: [...state.players, playerName],\n  };\n};\n\n//Uses Fischer algorithm to shuffle players\n\nconst playerShuffle = (state) => {\n  return {\n    ...state,\n    players: shuffle([...state.players]),\n  };\n};\n\n//Takes player list and creates an array of\n// player pairs.\n\nconst playerPairs = (state) => {\n  return {\n    ...state,\n    pairs: pairs([...state.players], 2),\n  };\n};\n\n//Starts tournament and add one to round state\n\nconst startTournament = (state) => {\n  return {\n    ...state,\n    round: state.round + 1,\n  };\n};\n\n//Takes the winners from the rounds, adds to the winners array and breaks them into paired array.\n\nconst roundWinners = (state, { winningPlayers }) => {\n  let winningPairs = pairs(winningPlayers, 2);\n  return {\n    ...state,\n    roundWinners: [...state.roundWinners, winningPairs],\n    round: state.round + 1,\n  };\n};\n\nconst champion = (state, { champ }) => {\n  return {\n    ...state,\n    champion: [...state.champion, champ],\n    round: state.round + 1,\n  };\n};\n\nconst reducer = (state = initial, action) => {\n  switch (action.type) {\n    case \"ADD_PLAYER\":\n      return addPlayer(state, action);\n    case \"START\":\n      return startTournament(playerPairs(playerShuffle(state, action)));\n    case \"NEXT_ROUND\":\n      return roundWinners(state, action);\n    case \"CHAMP\":\n      return champion(state, action);\n    case \"CLEAR\":\n      return initial;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, compose } from \"redux\";\nimport reducer from \"./reducer\";\nimport initial from \"./initial\";\nimport persistState from \"redux-localstorage\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, initial, composeEnhancers(persistState()));\n\nexport default store;\n","import React, { Component } from \"react\";\nimport \"../../App.scss\";\nclass Players extends Component {\n  render() {\n    const { players } = this.props;\n    return (\n      <ul className=\"listGroup\">\n        {players.map((item, index) => (\n          <div className=\"list-item__edit\">\n            <li className=\"list-item \" key={index}>\n              {item}\n            </li>\n          </div>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Players;\n","import { connect } from \"react-redux\";\nimport Players from \"./Players\";\n\nconst mapStateToProps = ({ players }) => {\n  return { players: players };\n};\n\nexport default connect(mapStateToProps)(Players);\n","import React from \"react\";\n\nconst Button = ({ type, handleClick, buttonClass, label, disabled, value }) => (\n  <button\n    label={label}\n    onClick={handleClick}\n    type={type}\n    className={buttonClass}\n    disabled={disabled}\n    value={value}\n  >\n    {label}\n  </button>\n);\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../App.scss\";\nimport Players from \"../Players\";\nimport Button from \"../Button/Button\";\n\n//\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerName: \"\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleAddName = this.handleAddName.bind(this);\n  }\n\n  // Watches value in form for player's input\n\n  handleChange = (e) => {\n    this.setState({ playerName: e.target.value });\n  };\n\n  // Add new player to players array\n\n  handleAddName = (e) => {\n    e.preventDefault();\n\n    if (this.state.playerName) {\n      this.setState({ playerName: this.state.playerName });\n      this.props.handleAdd(this.state);\n    }\n    this.setState({ playerName: \"\" });\n  };\n\n  /* Shuffle function to randomise & create new pairings */\n\n  handleStart = () => {\n    this.props.handleStart(this.state);\n  };\n\n  render() {\n    const { playerName } = this.state;\n    const { players, handleClear } = this.props;\n    const disabled = players.length === 8 ? true : false;\n\n    return (\n      <div className=\"container\">\n        <div className=\"block__form\">\n          <form className=\"form\" onSubmit={this.handleAddName}>\n            <div className=\"description\">\n              <p>Please Enter 8 Names for a tournament to be generated.</p>\n            </div>\n            <input\n              required\n              id=\"playerForm\"\n              maxlength=\"15\"\n              name=\"playerForm\"\n              className=\"form-control\"\n              type=\"text\"\n              value={playerName}\n              onChange={this.handleChange}\n              disabled={disabled}\n            />\n            <Button\n              buttonClass=\"button__form\"\n              label=\"Add A Player\"\n              type=\"submit\"\n              disabled={disabled}\n            />\n          </form>\n        </div>\n\n        <Link className=\" block__start\" to={\"/Tournament\"}>\n          <Button\n            buttonClass=\" block__start\"\n            label=\"Start\"\n            handleClick={this.handleStart}\n            disabled={players.length !== 8 ? true : false}\n          />\n        </Link>\n\n        <Button\n          buttonClass=\"block__reset\"\n          label=\"Reset\"\n          handleClick={handleClear}\n        ></Button>\n\n        <div className=\"block__players\">\n          <article className=\"player-list\">\n            <h1 className=\"title__app title__app__settings\">Players</h1>\n            <Players />\n          </article>\n        </div>\n\n        <div className=\"block__animated\"></div>\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n","import { connect } from \"react-redux\";\nimport { addPlayer, clear, startTournament } from \"../../data/actions\";\nimport Settings from \"./Settings\";\nconst mapStateToProps = (state) => {\n  return {\n    players: state.players,\n    pairs: state.pairs,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  handleAdd: (value) => dispatch(addPlayer(value)),\n  handleClear: (value) => dispatch(clear(value)),\n  handleStart: (value) => dispatch(startTournament(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n","export const addPlayer = (value) => {\n  return {\n    type: \"ADD_PLAYER\",\n    ...value,\n  };\n};\n\nexport const roundWinners = (value) => {\n  return {\n    type: \"NEXT_ROUND\",\n    ...value,\n  };\n};\n\nexport const champion = (value) => {\n  return {\n    type: \"CHAMP\",\n    ...value,\n  };\n};\n\nexport const startTournament = (value) => {\n  return {\n    type: \"START\",\n    ...value,\n  };\n};\n\nexport const clear = () => {\n  return {\n    type: \"CLEAR\",\n  };\n};\n","import React, { Component } from \"react\";\nimport \"../../App.scss\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"../Button/Button\";\n\nclass Matches extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      champ: [],\n      winningPlayers: [],\n      selected: null,\n    };\n    this.handleAddWinners = this.handleAddWinners.bind(this);\n    this.handleRound = this.handleRound.bind(this);\n  }\n\n  // Adds winners to a local array which is then sent\n  // to the global array using the handleNextRound action.\n\n  handleAddWinners = (e, pairIndex, itemIndex) => {\n    const winner = e.target.value;\n    const { champ } = this.state;\n    const { round } = this.props;\n\n    if (round !== 3) {\n      this.setState({\n        selected: `${pairIndex}-${itemIndex}`,\n        winningPlayers: [...this.state.winningPlayers, winner],\n      });\n    } else {\n      this.setState({ champ: [...champ, winner] });\n    }\n  };\n\n  handleRound = () => {\n    const { round, handleNextRound, handleChampion } = this.props;\n\n    round !== 3 ? handleNextRound(this.state) : handleChampion(this.state);\n\n    this.setState({ winningPlayers: [] });\n  };\n\n  render() {\n    const { pairs, round, handleClear, roundWinners, champion } = this.props;\n    const { winningPlayers, selected, champ } = this.state;\n    const semi = roundWinners[0];\n    const final = roundWinners[1];\n    const champName = champion.map((item) => item);\n    const reset =\n      round !== 4 ? \"block__reset__tournament\" : \"block__reset__new-game\";\n    const newGame = `${round !== 4 ? \"Reset\" : \"New Game?\"}`;\n\n    const disabled =\n      winningPlayers.length === 4 && round === 1\n        ? false\n        : winningPlayers.length === 2 && round === 2\n        ? false\n        : champ.length === 1 && round === 3\n        ? false\n        : true;\n\n    return (\n      <>\n        <div classname=\"container__wrapper\">\n          <div className=\"container__tournament\">\n            {round === 1 ? (\n              <section className=\"block__round \">\n                {pairs.map((item, pairIndex) => (\n                  <div className=\"pairs\" key={pairIndex}>\n                    {item.map((names, itemIndex) => (\n                      <Button\n                        key={itemIndex}\n                        handleClick={(e) =>\n                          this.handleAddWinners(e, pairIndex, itemIndex)\n                        }\n                        label={names}\n                        buttonClass={\n                          `${pairIndex}-${itemIndex}` === selected\n                            ? \"selected\"\n                            : \"block__player\"\n                        }\n                        value={names}\n                      />\n                    ))}\n                  </div>\n                ))}\n              </section>\n            ) : round === 2 ? (\n              <section className=\"block__round \">\n                {semi.map((names, pairIndex) => (\n                  <div className=\"pairs\" key={pairIndex}>\n                    {names.map((names, itemIndex) => (\n                      <Button\n                        key={itemIndex}\n                        handleClick={(e) =>\n                          this.handleAddWinners(e, pairIndex, itemIndex)\n                        }\n                        label={names}\n                        buttonClass={\n                          `${pairIndex}-${itemIndex}` === selected\n                            ? \"selected\"\n                            : \"block__player\"\n                        }\n                        value={names}\n                      />\n                    ))}\n                  </div>\n                ))}\n              </section>\n            ) : round === 3 ? (\n              <section className=\"block__round \">\n                {final.map((names, pairIndex) => (\n                  <div className=\"pairs\" key={pairIndex}>\n                    {names.map((names, itemIndex) => (\n                      <Button\n                        key={itemIndex}\n                        handleClick={(e) => this.handleAddWinners(e, \"value\")}\n                        label={names}\n                        buttonClass={\n                          `${pairIndex}-${itemIndex}` === selected\n                            ? \"selected\"\n                            : \"block__player\"\n                        }\n                        value={names}\n                      />\n                    ))}\n                  </div>\n                ))}\n              </section>\n            ) : (\n              <section className=\"block__champion\">\n                <p className=\"champion__greeting\">\n                  Congratulations&nbsp;\n                  <br />\n                  <span className=\"champion__name\">{champName}!</span>\n                  <br /> You've won the tournament!\n                </p>\n              </section>\n            )}\n\n            <Button\n              buttonClass={`${\n                round !== 4 ? \"block__next-round\" : \"button__notActive\"\n              }`}\n              label={`${round !== 3 ? \"Next Round\" : \"See Winner\"}`}\n              handleClick={this.handleRound}\n              disabled={disabled}\n            />\n\n            <Link to={\"/\"} className={reset}>\n              <Button\n                buttonClass={reset}\n                handleClick={handleClear}\n                label={newGame}\n              />\n            </Link>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Matches;\n","import { connect } from \"react-redux\";\nimport { roundWinners, clear, champion } from \"../../data/actions\";\nimport Matches from \"./Matches\";\n\nconst mapStateToProps = ({ pairs, round, roundWinners, champion }) => {\n  return {\n    pairs: pairs,\n    round: round,\n    roundWinners: roundWinners,\n    champion: champion,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  handleNextRound: (value) => dispatch(roundWinners(value)),\n  handleChampion: (value) => dispatch(champion(value)),\n  handleClear: (value) => dispatch(clear(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Matches);\n","import React, { Component } from \"react\";\nimport \"../../App.scss\";\nimport Matches from \"../Matches\";\n\nclass Tournament extends Component {\n  render() {\n    return (\n      <>\n        <Matches />\n      </>\n    );\n  }\n}\n\nexport default Tournament;\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"../../App.scss\";\nimport Settings from \"../Settings\";\nimport Tournament from \"../Tournament/Tournament\";\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Settings />\n          </Route>\n          <Route exact path=\"/Tournament\">\n            <Tournament />\n            <div className=\"nav\"></div>\n          </Route>\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./data/store\";\nimport App from \"./components/App/App\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}