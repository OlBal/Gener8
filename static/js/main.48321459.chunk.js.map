{"version":3,"sources":["data/initial.js","data/functions/pairs.js","data/functions/shuffle.js","data/reducer.js","data/store.js","data/history.js","data/actions.js","components/Players/Players.js","components/Players/index.js","components/Button/Button.js","components/Settings/Settings.js","components/Settings/index.js","components/Semi/Semi.js","components/Semi/index.js","components/Final/Final.js","components/Final/index.js","components/Matches/Matches.js","components/Matches/index.js","components/Tournament/Tournament.js","components/Tournament/index.js","components/App/App.js","index.js"],"names":["initial","players","pairs","roundWinners","round","arr","pairChunks","i","length","pairGroup","slice","push","shuffle","temp","m","Math","floor","random","addPlayer","state","playerName","playerShuffle","playerPairs","startTournament","nextRound","winningPlayers","reducer","action","type","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","persistState","createHashHistory","value","Players","this","props","className","map","item","index","key","Component","connect","Button","handleClick","buttonClass","label","disabled","onClick","Settings","handleChange","e","setState","target","handleAddName","preventDefault","handleAdd","handleStart","bind","handleClear","onSubmit","required","id","maxlength","name","onChange","to","dispatch","Semi","handleAddWinners","winner","handleRound","handleNextRound","names","Final","champion","console","log","Matches","selected","Tournament","classname","App","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48321459.chunk.js","sourcesContent":["const initial = {\n  players: [],\n  pairs: [],\n  roundWinners: [],\n  round: 0,\n};\n\nexport default initial;\n","//A function which outputs the pairs into smaller chunks of 2. It made more sense to break it out as a separate function in order not to confuse it with what is happening in the reducer functions.\n\nconst pairs = (arr, pairChunks) => {\n  let pairs = [];\n\n  for (let i = 0; i < arr.length; i += pairChunks) {\n    const pairGroup = arr.slice(i, i + pairChunks);\n    pairs.push(pairGroup);\n  }\n  return pairs;\n};\nexport default pairs;\n","// Using the Fisher Yates shuffle algorithm in a while loop, in order to mix up the player input list before pairing the players.\n//Originally this was done using a sort function but didn't randomise well enough.\n\nconst shuffle = (arr) => {\n  var m = arr.length,\n    temp,\n    i;\n  while (m) {\n    i = Math.floor(Math.random() * m--);\n    temp = arr[m];\n    arr[m] = arr[i];\n    arr[i] = temp;\n  }\n\n  return arr;\n};\n\nexport default shuffle;\n","import initial from \"./initial\";\nimport pairs from \"./functions/pairs\";\nimport shuffle from \"./functions/shuffle\";\n\n//Adds new player to global state array\n\nconst addPlayer = (state, { playerName }) => {\n  return {\n    ...state,\n    players: [...state.players, playerName],\n  };\n};\n\n//Uses Fischer algorithm to shuffle players\n\nconst playerShuffle = (state) => {\n  return {\n    ...state,\n    players: shuffle([...state.players]),\n  };\n};\n\n//Takes player list and creates an array of\n// player pairs.\n\nconst playerPairs = (state) => {\n  return {\n    ...state,\n    pairs: pairs([...state.players], 2),\n  };\n};\n\n//Starts tournament and add one to round state\n\nconst startTournament = (state) => {\n  return {\n    ...state,\n    round: state.round + 1,\n  };\n};\n\n//Adds round winners to global array\n\nconst nextRound = (state) => {\n  return {\n    ...state,\n    round: state.round + 1,\n  };\n};\n\n//Takes the winners from the rounds, adds to the winners array\n\nconst roundWinners = (state, { winningPlayers }) => {\n  return {\n    ...state,\n    roundWinners: [...state.roundWinners, winningPlayers],\n  };\n};\n\nconst reducer = (state = initial, action) => {\n  switch (action.type) {\n    case \"ADD_PLAYER\":\n      return addPlayer(state, action);\n    case \"START\":\n      return startTournament(playerPairs(playerShuffle(state, action)));\n    case \"NEXT_ROUND\":\n      return nextRound(roundWinners(state, action));\n    case \"CLEAR\":\n      return initial;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, compose } from \"redux\";\nimport reducer from \"./reducer\";\nimport initial from \"./initial\";\nimport persistState from \"redux-localstorage\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, initial, composeEnhancers(persistState()));\n\nexport default store;\n","import { createHashHistory } from \"history\";\nexport default createHashHistory();\n","export const addPlayer = (value) => {\n  return {\n    type: \"ADD_PLAYER\",\n    ...value,\n  };\n};\n\nexport const nextRound = (value) => {\n  return {\n    type: \"NEXT_ROUND\",\n    ...value,\n  };\n};\n\nexport const startTournament = (value) => {\n  return {\n    type: \"START\",\n    ...value,\n  };\n};\n\nexport const clear = () => {\n  return {\n    type: \"CLEAR\",\n  };\n};\n","import React, { Component } from \"react\";\nimport \"../../App.scss\";\nclass Players extends Component {\n  render() {\n    const { players } = this.props;\n    return (\n      <ul className=\"listGroup\">\n        {players.map((item, index) => (\n          <div className=\"list-item__edit\">\n            <li\n              className=\"list-item list-item--fade list-item--show\"\n              key={index}\n            >\n              {item}\n            </li>\n          </div>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Players;\n","import { connect } from \"react-redux\";\nimport Players from \"./Players\";\n\nconst mapStateToProps = ({ players }) => {\n  return { players: players };\n};\n\nexport default connect(mapStateToProps)(Players);\n","import React from \"react\";\n\nconst Button = ({ type, handleClick, buttonClass, label, disabled, value }) => (\n  <button\n    label={label}\n    onClick={handleClick}\n    type={type}\n    className={buttonClass}\n    disabled={disabled}\n    value={value}\n  >\n    {label}\n  </button>\n);\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../App.scss\";\nimport Players from \"../Players\";\nimport Button from \"../Button/Button\";\n\n//\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerName: \"\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleAddName = this.handleAddName.bind(this);\n  }\n\n  // Watches value in form for player's input\n\n  handleChange = (e) => {\n    this.setState({ playerName: e.target.value });\n  };\n\n  // Add new player to players array\n\n  handleAddName = (e) => {\n    e.preventDefault();\n    this.setState({ playerName: this.state.playerName });\n    this.props.handleAdd(this.state);\n  };\n\n  /* Shuffle function to randomise & create new pairings */\n\n  handleStart = () => {\n    this.props.handleStart(this.state);\n  };\n\n  render() {\n    const { playerName } = this.state;\n    const { players, handleClear } = this.props;\n    const disabled = players.length === 8 ? true : false;\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"title__app title__app__settings\"> PING PONG</h1>\n        <div className=\"textBlock\">\n          <p className=\"playerForm\">\n            Enter Your Player's Names Here!\n            <br />\n            <span className=\"subtext\">\n              Make sure you enter 8 names for a tournament\n            </span>\n          </p>\n        </div>\n        <form className=\"form \" onSubmit={this.handleAddName}>\n          <input\n            required\n            id=\"playerForm\"\n            maxlength=\"15\"\n            name=\"playerForm\"\n            className=\"form-control\"\n            type=\"text\"\n            value={playerName}\n            onChange={this.handleChange}\n            disabled={disabled}\n          />\n          <Button\n            buttonClass=\"button button__form\"\n            label=\"Add A Player\"\n            type=\"submit\"\n            disabled={disabled}\n          />\n        </form>\n        <Link to={\"/Tournament\"} className=\"nav nav__settings grid-child1\">\n          <Button\n            buttonClass=\"button grid-child1--colour \"\n            label=\"Start\"\n            handleClick={this.handleStart}\n            disabled={players.length !== 8 ? true : false}\n          />\n        </Link>\n\n        <Button\n          buttonClass=\"button grid-child2\"\n          label=\"Reset\"\n          handleClick={handleClear}\n        />\n        <article className=\"player-list\">\n          <h1 className=\"title__app title__app__settings\">Players</h1>\n          <Players />\n        </article>\n\n        <div className=\"circle\"></div>\n\n        <div className=\"circle--red\"></div>\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n","import { connect } from \"react-redux\";\nimport { addPlayer, clear, startTournament } from \"../../data/actions\";\nimport Settings from \"./Settings\";\nconst mapStateToProps = (state) => {\n  return {\n    players: state.players,\n    pairs: state.pairs,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  handleAdd: (value) => dispatch(addPlayer(value)),\n  handleClear: (value) => dispatch(clear(value)),\n  handleStart: (value) => dispatch(startTournament(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n","import React, { Component } from \"react\";\nimport \"../../App.scss\";\nimport Button from \"../Button/Button\";\n\nclass Semi extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      winningPlayers: [],\n    };\n    this.handleAddWinners = this.handleAddWinners.bind(this);\n    this.handleRound = this.handleRound.bind(this);\n  }\n\n  handleAddWinners = (e) => {\n    const winner = e.target.value;\n    this.setState({\n      winningPlayers: [...this.state.winningPlayers, winner],\n    });\n  };\n\n  handleRound = () => {\n    this.props.handleNextRound(this.state);\n  };\n\n  render() {\n    const { roundWinners, round } = this.props;\n    const { winningPlayers } = this.state;\n\n    return (\n      <>\n        {roundWinners.map((item, index) => (\n          <div className=\"pairs container__roster__list\" key={index}>\n            {item.map((names, index) => (\n              <Button\n                key={index}\n                handleClick={(e) => this.handleAddWinners(e, \"value\")}\n                label={names}\n                buttonClass={\"button player\"}\n                value={names}\n              />\n            ))}\n          </div>\n        ))}\n\n        <Button\n          buttonClass={`button ${round !== 2 ? \"button__notActive\" : null}`}\n          label=\"Next Round\"\n          handleClick={this.handleRound}\n          disabled={winningPlayers.length === 2 ? false : true}\n        />\n      </>\n    );\n  }\n}\n\nexport default Semi;\n","import { connect } from \"react-redux\";\nimport { nextRound } from \"../../data/actions\";\nimport Semi from \"./Semi\";\n\nconst mapStateToProps = ({ roundWinners, round }) => {\n  return {\n    roundWinners: roundWinners,\n    round: round,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  handleNextRound: (value) => dispatch(nextRound(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Semi);\n","import React, { Component } from \"react\";\nimport \"../../App.scss\";\nimport Button from \"../Button/Button\";\n\nclass Final extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      champion: [],\n    };\n    this.handleAddWinners = this.handleAddWinners.bind(this);\n  }\n\n  handleAddWinners = (e) => {\n    const winner = e.target.value;\n    this.setState({ champion: winner });\n    console.log(winner);\n  };\n\n  render() {\n    const { roundWinners, round } = this.props;\n    const { champion } = this.state;\n\n    return (\n      <>\n        {roundWinners.map((item, index) => (\n          <div className=\"pairs container__roster__list\" key={index}>\n            {item.map((names, index) => (\n              <Button\n                key={index}\n                handleClick={(e) => this.handleAddWinners(e, \"value\")}\n                label={names}\n                buttonClass={\"button player\"}\n                value={names}\n              />\n            ))}\n          </div>\n        ))}\n\n        <Button\n          buttonClass={`button  ${round !== 3 ? \"button__notActive\" : null}`}\n          label=\"Next Round\"\n          handleClick={this.handleRound}\n          disabled={champion.length === 1 ? false : true}\n        />\n      </>\n    );\n  }\n}\n\nexport default Final;\n","import { connect } from \"react-redux\";\nimport Final from \"./Final\";\n\nconst mapStateToProps = ({ roundWinners, round }) => {\n  return {\n    roundWinners: roundWinners,\n    round: round,\n  };\n};\n\nexport default connect(mapStateToProps)(Final);\n","import React, { Component } from \"react\";\nimport \"../../App.scss\";\nimport Button from \"../Button/Button\";\n\nclass Matches extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      winningPlayers: [],\n      selected: false,\n    };\n    this.handleAddWinners = this.handleAddWinners.bind(this);\n    this.handleRound = this.handleRound.bind(this);\n  }\n\n  // Adds winners to a local array which is then sent\n  // to the global array using the handleNextRound action.\n\n  handleAddWinners = (e) => {\n    const winner = e.target.value;\n    this.setState({\n      selected: !this.state.selected,\n      winningPlayers: [...this.state.winningPlayers, winner],\n    });\n  };\n\n  handleRound = () => {\n    this.props.handleNextRound(this.state);\n  };\n\n  render() {\n    const { pairs, round } = this.props;\n    const { winningPlayers, selected } = this.state;\n\n    //Here the array of player pairs is being interated over twice. Once to return the pairs from the parent array, and again to return the individual players.\n    return (\n      <>\n        {pairs.map((item, index) => (\n          <div className=\"pairs container__roster__list\" key={index}>\n            {item.map((names, index) => (\n              <Button\n                key={index}\n                handleClick={(e) => this.handleAddWinners(e, \"value\")}\n                label={names}\n                buttonClass=\"button player\"\n                value={names}\n              />\n            ))}\n          </div>\n        ))}\n\n        <Button\n          buttonClass={`button\n          ${round !== 1 ? \"button__notActive\" : null}`}\n          label=\"Next Round\"\n          handleClick={this.handleRound}\n          disabled={winningPlayers.length === 4 ? false : true}\n        />\n      </>\n    );\n  }\n}\n\nexport default Matches;\n","import { connect } from \"react-redux\";\nimport { nextRound } from \"../../data/actions\";\nimport Matches from \"./Matches\";\n\nconst mapStateToProps = ({ pairs, round }) => {\n  return {\n    pairs: pairs,\n    round: round,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  handleNextRound: (value) => dispatch(nextRound(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Matches);\n","import React, { Component } from \"react\";\nimport \"../../App.scss\";\nimport { Link } from \"react-router-dom\";\nimport Semi from \"../Semi\";\nimport Final from \"../Final\";\nimport Matches from \"../Matches\";\nimport Button from \"../Button/Button\";\n\nclass Tournament extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: false,\n    };\n  }\n\n  render() {\n    const { handleClear, round } = this.props;\n\n    // The titles of the tournament are dictated by the round increments.\n\n    return (\n      <>\n        <div classname=\"container__wrapper\">\n          <div className=\"container__tournament\">\n            <h2 className=\" title__tournament\">\n              {round === 1\n                ? \"Quarter Finals\"\n                : round === 2\n                ? \"Semi-Finals\"\n                : round === 3\n                ? \"Final\"\n                : \"Welcome To The Tournament\"}\n            </h2>\n            <h3 className=\"title__match1\">Match 1</h3>\n            <h3 className=\"title__match2 \">Match 2</h3>\n            <h3 className=\"title__match3 \">Match 3</h3>\n            <h3 className=\"title__match4 \">Match 4</h3>\n            <section className=\"container__roster round-one\">\n              <Matches />\n            </section>\n            <section className=\"container__roster semi-final\">\n              <h2 className=\"round__title\"></h2>\n              <Semi />\n            </section>\n            <section className=\"container__roster final\">\n              <Final />\n            </section>\n            <Link to={\"/\"} className=\"nav-link nav__tournament\">\n              <Button\n                buttonClass=\"button settings\"\n                handleClick={handleClear}\n                label=\"Reset\"\n              />\n            </Link>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Tournament;\n","import { connect } from \"react-redux\";\nimport { clear } from \"../../data/actions\";\nimport Tournament from \"./Tournament\";\nconst mapStateToProps = ({ pairs, round }) => {\n  return {\n    pairs: pairs,\n    round: round,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  handleClear: (value) => dispatch(clear(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tournament);\n","import React, { Component } from \"react\";\nimport history from \"../../data/history\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"../../App.scss\";\nimport Settings from \"../Settings\";\nimport Tournament from \"../Tournament\";\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Settings />\n          </Route>\n          <Route exact path=\"/Tournament\">\n            <Tournament />\n            <div className=\"nav\"></div>\n          </Route>\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./data/store\";\nimport App from \"./components/App/App\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}